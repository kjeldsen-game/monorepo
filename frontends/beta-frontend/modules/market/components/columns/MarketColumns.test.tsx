import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import { MarketColumns } from './MarketColumns';
import { GridRenderCellParams } from '@mui/x-data-grid';

describe('MarketColumns', () => {
    const mockHandleButtonClick = jest.fn();
    const columns = MarketColumns(mockHandleButtonClick, false);
    it('should render expected column headers', () => {
        const expectedHeaders = [
            'Average Bid',
            'My Bid',
            'Total Bidders',
            'Action',
        ];

        expectedHeaders.forEach((expectedHeaderText) => {
            const col = columns.find(c => {
                const headerElement = c.renderHeader?.();
                return headerElement?.props?.header === expectedHeaderText;
            });

            expect(col).toBeDefined();

            const { container } = render(<>{col?.renderHeader?.()}</>);
            expect(container.textContent).toContain(expectedHeaderText);
        });
    });

    it('should call handleButtonClick when action button is clicked', () => {
        const auction = {
            player: {},
            averageBid: '100',
            bid: '150',
            bidders: 5,
        };

        const actionColumn = columns.find(col => col.field === 'action');
        const params = {
            row: auction,
            rowNode: {
                id: '1',
                type: 'leaf',
                depth: 0,
                parent: null,
                isAutoGenerated: false
            }
        } as unknown as GridRenderCellParams;

        const { getByRole } = render(<>{actionColumn?.renderCell?.(params)}</>);
        const button = getByRole('button');
        fireEvent.click(button);

        expect(mockHandleButtonClick).toHaveBeenCalledWith(auction);
    });
});

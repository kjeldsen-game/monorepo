services:
    ###############
    ## Local DBs ##
    ###############

    mongodb:
        image: mongo:5.0
        container_name: mongodb
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: root
            MONGO_INITDB_DATABASE: admin
        volumes:
            - ./.mongo_data:/data/db # Uncomment to persist data locally if container removed
        # - ./mongodb_init:/docker-entrypoint-initdb.d
        healthcheck:
            test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
            interval: 10s
            timeout: 10s
            retries: 3
            start_period: 5s

    ##################
    ## Main Service ##
    ##################

    main-service:
        # image: 324037306405.dkr.ecr.eu-west-1.amazonaws.com/main-service:latest
        build:
            context: ../services/main-service
            dockerfile: ./Dockerfile
        container_name: main-service
        ports:
            - 15001:8080
            - 15002:8081
        env_file:
            - ./config/main-service.env
        depends_on:
            mongodb:
                condition: service_healthy
        healthcheck:
            test: "curl --fail --silent localhost:8081/actuator/health | grep UP || exit 1"
            interval: 20s
            timeout: 5s
            retries: 5

    ######################
    ## Frontend Service ##
    ######################

    beta-frontend:
        # image: 324037306405.dkr.ecr.eu-west-1.amazonaws.com/beta-frontend:latest
        build:
            context: ../frontends/beta-frontend
            dockerfile: ./Dockerfile.local
        container_name: beta-frontend
        ports:
            - 3000:3000
        env_file:
            - ./config/beta-frontend.env
        deploy:
            resources:
                limits:
                    memory: 2g # Limits memory to 2GB
                    cpus: "1.0" # Limits to 1 CPU

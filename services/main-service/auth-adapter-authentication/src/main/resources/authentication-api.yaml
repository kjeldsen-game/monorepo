openapi: 3.0.0
info:
  version: 1.0.0
  title: Authentication API

servers:
  - url: http://localhost:15001/v1

tags:
  - name: auth
paths:

  /auth/reset-password:
    post:
      summary: Reset Password
      operationId: resetPassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResetPasswordRequest"
      responses:
        "200":
          description: Password was successfully reset.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultSuccessResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/forget-password:
    post:
      summary: Request reset password link
      operationId: requestPasswordResetLink
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PasswordResetLinkRequest"
      responses:
        "200":
          description: Password link successfully generated and sent to mail
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultSuccessResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/profile/change-password:
    post:
      summary: Change password when you are logged in
      operationId: changePassword
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangePasswordRequest"
      responses:
        "200":
          description: Password successfully changed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultSuccessResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/profile:
    get:
      summary: Get Profile details including avatar
      operationId: getProfile
      responses:
        "200":
          description: Successful response with profile details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProfileResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/profile/avatar:
    post:
      summary: Update the avatar
      operationId: updateAvatar
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/UpdateAvatarRequest"
      responses:
        "200":
          description: Avatar successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultSuccessResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/register:
    post:
      summary: Register
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DefaultSuccessResponse"
        "400":
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/token:
    post:
      summary: "Generate JWT Token"
      description: "Authenticates a user and provides a JWT token upon successful authentication"
      operationId: "generateToken"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRequest"
      responses:
        "200":
          description: "Token generated successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/me:
    get:
      summary: Get currently logged-in user
      operationId: me
      responses:
        "200":
          description: Logged-in user found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDetailsResponse"
        "401":
          $ref: "#/components/responses/DefaultErrorResponse"
        "404":
          $ref: "#/components/responses/DefaultErrorResponse"

components:
  responses:

    DefaultErrorResponse:
      description: Unexpected error
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  schemas:

    DefaultSuccessResponse:
      type: object
      properties:
        message:
          type: string
          example: "Password was successfully changed."

    ResetPasswordRequest:
      type: object
      required:
        - token
        - newPassword
        - confirmPassword
      properties:
        token:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string

    ChangePasswordRequest:
      type: object
      required:
        - oldPassword
        - newPassword
        - confirmPassword
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
        confirmPassword:
          type: string

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - teamName
        - confirmPassword
      properties:
        email:
          type: string
        teamName:
          type: string
        password:
          type: string
        confirmPassword:
          type: string

    PasswordResetLinkRequest:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: admin@gmail.com
          description: "Email of the user where reset link will be send"

    TokenRequest:
      type: object
      properties:
        email:
          type: string
          description: "The email for authentication"
        password:
          type: string
          format: password
          description: "The password for authentication"

    UpdateAvatarRequest:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
          description: The avatar image file (JPEG or PNG)

    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: "JWT token that can be used for authorization"

    ProfileResponse:
      type: object
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        teamName:
          type: string
          example: "Team Alpha"
        avatar:
          type: string
          description: Base64 encoded avatar image
          example: "iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAIAAACa7..."

    ErrorResponse:
      type: object
      required:
        - status
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        status:
          type: string

    UserDetailsResponse:
      type: object
      required:
        - id
        - email
        - teamId
      properties:
        id:
          type: string
        email:
          type: string
        teamId:
          type: string

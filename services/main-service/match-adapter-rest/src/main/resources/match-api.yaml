openapi: 3.0.0
info:
  version: 1.0.0
  title: Match Service API

tags:
  - name: match

paths:

  /match:
    post:
      summary: Create a match
      operationId: createMatch
      tags:
        - match
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/CreateMatchRequest"
      responses:
        "201":
          description: Match was created
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Get all matches
      operationId: getAllMatches
      parameters:
        - name: teamId
          in: query
          description: Team id to filter by
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: Number of matches to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: page
          in: query
          description: Page number of the matches to return
          required: false
          schema:
            default: 0
            type: integer
            format: int32
      tags:
        - match
      responses:
        "200":
          description: Players were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/MatchResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /match/{matchId}:
    get:
      summary: Get a match
      operationId: getMatch
      tags:
        - match
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: string
            example: id
      responses:
        "200":
          description: Match was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/responses/MatchResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    patch:
      summary: Edit a match
      operationId: editMatch
      tags:
        - match
      parameters:
        - name: matchId
          in: path
          required: true
          schema:
            type: string
            example: id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/EditMatchRequest"
      responses:
        "200":
          description: Match was edited
          # Returning the match report as string for testing
          content:
            application/json:
              schema:
                type: string
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:

  requestBodies:

    CreateMatchRequest:
      description: Create match request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreateMatchRequest"

    EditMatchRequest:
      description: Edit match request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EditMatchRequest"

  responses:

    MatchResponse:
      description: Match response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MatchResponse"

    DefaultErrorResponse:
      description: Unexpected error
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"

  schemas:

    Tactic:
      type: string
      example: DOUBLE_TEAM
      enum:
        - DOUBLE_TEAM
        - MAN_ON_MAN
        - ZONE
        - COUNTER_ATTACK
        - POSSESSION_CONTROL
        - TIKA_TAKA
        - WING_PLAY
        - CATENACCIO
        - ROUTE_ONE
        - OFFSIDE_TRAP

    HorizontalPressure:
      type: string
      example: NO_HORIZONTAL_FOCUS
      enum:
        - SWARM_CENTRE
        - SWARM_FLANKS
        - NO_HORIZONTAL_FOCUS

    VerticalPressure:
      type: string
      example: NO_VERTICAL_FOCUS
      enum:
        - MID_PRESSURE
        - LOW_PRESSURE
        - NO_VERTICAL_FOCUS

    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string

    CreateMatchRequest:
      type: object
      properties:
        home:
          type: object
          properties:
            id:
              type: string
              example: id
            modifiers:
              $ref: "#/components/schemas/Modifiers"
        away:
          type: object
          properties:
            id:
              type: string
              example: id
            modifiers:
              $ref: "#/components/schemas/Modifiers"
        dateTime:
          type: string
          format: date-time
          example: 2020-01-01T00:00:00Z

    EditMatchRequest:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/Status"

    Status:
      type: string
      example: ACCEPTED
      enum:
        - PENDING
        - ACCEPTED
        - REJECTED

    MatchResponse:
      type: object
      properties:
        id:
          type: string
        home:
          $ref: "#/components/schemas/TeamResponse"
        away:
          $ref: "#/components/schemas/TeamResponse"
        dateTime:
          type: string
          format: date-time
          example: 2020-01-01T00:00:00Z
        status:
          $ref: "#/components/schemas/Status"
        matchReport:
          $ref: "#/components/schemas/MatchReportResponse"

    TeamResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        modifiers:
          $ref: "#/components/schemas/Modifiers"
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerResponse"
        bench:
          type: array
          items:
            $ref: "#/components/schemas/PlayerResponse"

    Modifiers:
      type: object
      properties:
        tactic:
          $ref: "#/components/schemas/Tactic"
        horizontalPressure:
          $ref: "#/components/schemas/HorizontalPressure"
        verticalPressure:
          $ref: "#/components/schemas/VerticalPressure"

    PlayerResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        teamId:
          type: string
        position:
          $ref: "#/components/schemas/PlayerPositionResponse"

    PlayerPositionResponse:
      type: string
      example: CENTRE_BACK
      enum:
        - CENTRE_BACK
        - AERIAL_CENTRE_BACK
        - SWEEPER
        - LEFT_BACK
        - RIGHT_BACK
        - LEFT_WINGBACK
        - RIGHT_WINGBACK
        - DEFENSIVE_MIDFIELDER
        - CENTRE_MIDFIELDER
        - LEFT_MIDFIELDER
        - RIGHT_MIDFIELDER
        - LEFT_WINGER
        - OFFENSIVE_MIDFIELDER
        - RIGHT_WINGER
        - FORWARD
        - AERIAL_FORWARD
        - STRIKER
        - AERIAL_STRIKER
        - GOALKEEPER

    MatchReportResponse:
      type: object
      properties:
        home:
          $ref: "#/components/schemas/TeamResponse"
        away:
          $ref: "#/components/schemas/TeamResponse"
        homeScore:
          type: integer
        awayScore:
          type: integer
        plays:
          type: array
          items:
            $ref: "#/components/schemas/PlayResponse"

    PlayResponse:
      type: object
      properties:
        clock:
          type: integer
        action:
          $ref: "#/components/schemas/ActionResponse"
        duel:
          $ref: "#/components/schemas/DuelResponse"

    ActionResponse:
      type: string
      example: PASS
      enum:
        - PASS
        - POSITION
        - TACKLE
        - SHOOT

    DuelResponse:
      type: object
      properties:
        initiator:
          $ref: "#/components/schemas/PlayerResponse"
        challenger:
          $ref: "#/components/schemas/PlayerResponse"
        receiver:
          $ref: "#/components/schemas/PlayerResponse"
        result:
          $ref: "#/components/schemas/DuelResultResponse"

    DuelResultResponse:
      type: string
      example: WIN
      enum:
        - WIN
        - LOSE

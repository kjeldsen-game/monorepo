openapi: 3.0.0
info:
  version: 1.0.0
  title: Players Service API

servers:
  #  - url: http://localhost:8081/api
  #  - url: https://actively-accurate-platypus.ngrok-free.app/api
  - url: http://localhost:8081/v1
  - url: https://actively-accurate-platypus.ngrok-free.app/v1

tags:
  - name: team
  - name: player
  - name: player-position-tendencies
  - name: training
  - name: simulator

paths:
  /team:
    get:
      summary: Get all teams
      operationId: getAllTeams
      parameters:
        - name: name
          in: query
          description: Name of team
          required: false
          schema:
            type: string
        - name: size
          in: query
          description: Number of teams to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: page
          in: query
          description: Page number of the teams to return
          required: false
          schema:
            default: 0
            type: integer
            format: int32
      tags:
        - team
      responses:
        "200":
          description: Teams were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/TeamResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /team/{teamId}:
    get:
      summary: Retrieves a team
      operationId: getTeamById
      tags:
        - team
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      responses:
        "200":
          description: Returns the team
          content:
            application/json:
              schema:
                $ref: "#/components/responses/TeamResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    patch:
      summary: Edits a team
      operationId: updateTeamById
      tags:
        - team
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/EditTeamRequest"
      responses:
        "200":
          description: Returns the updated team
          content:
            application/json:
              schema:
                $ref: "#/components/responses/TeamResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /team/{teamId}/economy:
    get:
      summary: Get Team Economy
      operationId: getTeamEconomy
      tags:
        - team
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      responses:
        "200":
          description: Team Economy is retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/responses/EconomyResponse'

  /team/{teamId}/transactions:
    get:
      summary: Get team Transactions
      operationId: getTeamTransactions
      tags:
        - team
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      responses:
        "200":
          description: Team transactions were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/TransactionReportResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player:
    post:
      summary: Create a player
      operationId: createPlayer
      tags:
        - player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/CreatePlayerRequest"
      responses:
        "201":
          description: Player was created
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    get:
      summary: Get all players
      operationId: getAllPlayers
      parameters:
        - name: position
          in: query
          description: Position of the player
          required: false
          schema:
            $ref: "#/components/schemas/PlayerPosition"
        - name: size
          in: query
          description: Number of players to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: page
          in: query
          description: Page number of the players to return
          required: false
          schema:
            default: 0
            type: integer
            format: int32
      tags:
        - player
      responses:
        "200":
          description: Players were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/PlayerResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player/{playerId}:
    get:
      summary: Retrieves a player
      operationId: getPlayerById
      tags:
        - player
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      responses:
        "200":
          description: Returns the player
          content:
            application/json:
              schema:
                $ref: "#/components/responses/PlayerResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player/generate:
    post:
      summary: Generate a number of players
      operationId: generatePlayer
      tags:
        - player
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/GeneratePlayersRequest"
      responses:
        "201":
          description: Players were generated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/PlayerResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player/{playerId}/sell:
    put:
      summary: Put player on the Market
      operationId: sellPlayer
      tags:
        - player
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      responses:
        "200":
          description: Player was put on the Market
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player-position-tendencies:
    get:
      summary: Get all player position tendencies
      operationId: getAllPlayerPositionTendencies
      tags:
        - player-position-tendencies
      responses:
        "200":
          description: Player position tendencies were retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/responses/PlayerPositionTendencyResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /player-position-tendencies/{position}:
    get:
      summary: Get the tendency of a position
      operationId: getPlayerPositionTendency
      parameters:
        - name: position
          in: path
          description: Position of the player
          required: true
          schema:
            $ref: "#/components/schemas/PlayerPosition"
      tags:
        - player-position-tendencies
      responses:
        "200":
          description: Player position tendency was retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/responses/PlayerPositionTendencyResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    patch:
      summary: Update the tendency of a position
      operationId: updatePlayerPositionTendency
      tags:
        - player-position-tendencies
      parameters:
        - name: position
          in: path
          description: Position of the player
          required: true
          schema:
            $ref: "#/components/schemas/PlayerPosition"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/UpdatePlayerPositionTendencyRequest"
      responses:
        "200":
          description: Player position tendency was updated
          content:
            application/json:
              schema:
                $ref: "#/components/responses/PlayerPositionTendencyResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /training/{playerId}:
    get:
      summary: Get historical training of a player
      operationId: getHistoricalTraining
      tags:
        - training
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      responses:
        "200":
          description: Training historical returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerHistoricalTrainingResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      summary: Schedule training of a player
      operationId: schedulePlayerTraining
      tags:
        - training
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SchedulePlayerTrainingRequest"
      responses:
        "200":
          description: PlayerTrainingScheduled
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /training/{playerId}/bloom:
    post:
      summary: Register a new bloom phase
      operationId: registerBloomPhase
      tags:
        - training
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterBloomPhaseRequest"
      responses:
        "201":
          description: Bloom phase was registered
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/training/{playerId}:
    post:
      summary: Register a simulated scheduled training
      operationId: registerSimulatedScheduledTraining
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterSimulatedScheduledTrainingRequest"
      responses:
        "200":
          description: Simulated training was scheduled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerHistoricalTrainingResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/potential-rise/{playerId}:
    post:
      summary: Register a simulated scheduled potential rise
      operationId: registerSimulatedScheduledPotentialRise
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterSimulatedScheduledPotentialRiseRequest"
      responses:
        "200":
          description: Simulated potential rise was scheduled
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerHistoricalPotentialRiseResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/cantera-score/{teamId}:
    post:
      summary: Register an investment on the Cantera
      operationId: registerInvestmentOnCantera
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterInvestmentOnCanteraRequest"
      responses:
        "201":
          description: Simulated investment on cantera was applied
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/economic-investment/{teamId}:
    post:
      summary: Register an economic investment
      operationId: registerEconomicInvestment
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterEconomicInvestmentRequest"
      responses:
        "201":
          description: Simulated economic investment
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/sponsor-income/{teamId}:
    post:
      summary: Register a sponsor income
      operationId: registerSponsorIncome
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterSponsorIncomeRequest"
      responses:
        "201":
          description: Simulated sponsor income
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/salary-payroll/{teamId}:
    post:
      summary: Simulates a salary payroll
      operationId: simulateSalaryPayroll
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateSalaryPayrollRequest"
      responses:
        "201":
          description: Simulated sponsor income
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/salary-increase/{teamId}:
    post:
      summary: Simulates a salary increase
      operationId: simulateSalaryIncrease
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      responses:
        "201":
          description: Simulated sponsor income
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/decline/{playerId}:
    post:
      summary: Register a simulated decline
      operationId: registerSimulatedDecline
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/PlayerIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/RegisterSimulatedDeclineRequest"
      responses:
        "200":
          description: Decline phase simulated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerDeclineResponse"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/match-income/{teamId}:
    post:
      summary: Simulate a match attendance income payout
      operationId: simulateMatchIncome
      tags:
        - simulator
      parameters:
        - $ref: '#/components/parameters/TeamIdPathParameter'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateMatchIncomeRequest"
      responses:
        "200":
          description: Match attendance income payout simulated
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/update-fans/{teamId}:
    post:
      summary: Simulate a fans update
      operationId: simulateFansUpdate
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateFansUpdateRequest"
      responses:
        "200":
          description: Fans update simulated
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/update-pricing/{teamId}:
    post:
      summary: Simulate update price of team items
      operationId: simulatePricingUpdate
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulatePricingUpdateRequest"
      responses:
        "200":
          description: Pricing updated
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/update-building/{teamId}:
    post:
      summary: Simulate building upgrade
      operationId: simulateBuildingUpgrade
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateBuildingUpgradeRequest"
      responses:
        "200":
          description: Building upgraded
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/building-maintenance-expense/{teamId}:
    post:
      summary: Simulate building maintenance expense
      operationId: simulateBuildingMaintenanceExpense
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      responses:
        "200":
          description: Building upgraded
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/billboards-selection/{teamId}:
    post:
      summary: Simulate billboard selection w income
      operationId: simulateBillboardSelection
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateBillboardSelectionRequest"
      responses:
        "200":
          description: Billboard income selected
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/update-loyalty/{teamId}:
    post:
      summary: Simulate loyalty update
      operationId: simulateLoyaltyUpdate
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateLoyaltyUpdateRequest"
      responses:
        "200":
          description: Billboard income selected
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/reset-sponsor:
    post:
      summary: Reset sponsor
      operationId: simulateResetSponsor
      tags:
        - simulator
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateSponsorResetRequest"
      responses:
        "200":
          description: Sponsor was reseted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /simulator/reset-billboard-deal:
    post:
      summary: Reset billboard deal
      operationId: simulateBillboardDealReset
      tags:
        - simulator
      responses:
        "200":
          description: Billboard deal was reseted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"


  /simulator/sign-sponsor/{teamId}:
    post:
      summary: Sign Sponsor
      operationId: simulateSignSponsor
      tags:
        - simulator
      parameters:
        - $ref: "#/components/parameters/TeamIdPathParameter"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/SimulateSignSponsorRequest"
      responses:
        "200":
          description: Sponsor deal was signed
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:

  parameters:

    PlayerIdPathParameter:
      name: playerId
      in: path
      description: Id of the player
      required: true
      schema:
        type: string

    TeamIdPathParameter:
      name: teamId
      in: path
      description: Id of the team
      required: true
      schema:
        type: string

  requestBodies:

    SchedulePlayerTrainingRequest:
      description: Schedule player training request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SchedulePlayerTrainingRequest"

    EditTeamRequest:
      description: Edit team request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EditTeamRequest"

    CreatePlayerRequest:
      description: Create player request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CreatePlayerRequest"

    GeneratePlayersRequest:
      description: Generate players request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GeneratePlayersRequest"

    UpdatePlayerPositionTendencyRequest:
      description: Update player position tendency request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UpdatePlayerPositionTendencyRequest"

    RegisterSimulatedScheduledTrainingRequest:
      description: Register a simulated scheduled training request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterSimulatedScheduledTrainingRequest"

    RegisterSimulatedScheduledPotentialRiseRequest:
      description: Register a simulated scheduled Potential Rise request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterSimulatedScheduledPotentialRiseRequest"

    RegisterInvestmentOnCanteraRequest:
      description: Register an investment on cantera request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterInvestmentOnCanteraRequest"

    RegisterEconomicInvestmentRequest:
      description: Register an economic investment
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterEconomicInvestmentRequest"

    RegisterSponsorIncomeRequest:
      description: Register a sponsor income
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterEconomicInvestmentRequest"

    SimulateSalaryPayrollRequest:
      description: Simulate a salary payroll
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateSalaryPayrollRequest"

    SimulateMatchIncomeRequest:
      description: Simulate a match payroll
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateMatchIncomeRequest"

    SimulateFansUpdateRequest:
      description: Simulate a match attendance payroll
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateFansUpdateRequest"

    SimulatePricingUpdateRequest:
      description: Simulate a pricing update
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulatePricingUpdateRequest"

    SimulateBuildingUpgradeRequest:
      description: Simulate a building upgrade
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateBuildingUpgradeRequest"

    SimulateBillboardSelectionRequest:
      description: Simulate a billboard income selection
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateBillboardSelectionRequest"

    SimulateLoyaltyUpdateRequest:
      description: Simulate loyalty update request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateLoyaltyUpdateRequest"

    SimulateSponsorResetRequest:
      description: Simulate sponsor reset request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateSponsorResetRequest"

    SimulateSignSponsorRequest:
      description: Simulate sponsor sign request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SimulateSignSponsorRequest"

    RegisterBloomPhaseRequest:
      description: Register a bloom phase request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterBloomPhaseRequest"

    RegisterSimulatedDeclineRequest:
      description: Register a simulated decline
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterSimulatedDeclineRequest"

  responses:

    EconomyResponse:
      description: Economy response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EconomyResponse"

    TransactionReportResponse:
      description: Team Transactions response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionReportResponse"

    PlayerResponse:
      description: Player response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PlayerResponse"

    TeamResponse:
      description: Team response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamResponse"

    PlayerPositionTendencyResponse:
      description: Player position tendency response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PlayerPositionTendencyResponse"

    PlayerHistoricalTrainingResponse:
      description: Player historical training response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PlayerHistoricalTrainingResponse"

    DefaultErrorResponse:
      description: Unexpected error
      content:
        "*/*":
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Error"

  schemas:

    PlayerStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - BENCH
        - FOR_SALE
        - RETIRED

    PlayerSkill:
      type: string
      enum:
        - SCORING
        - OFFENSIVE_POSITIONING
        - BALL_CONTROL
        - PASSING
        - AERIAL
        - CONSTITUTION
        - TACKLING
        - DEFENSIVE_POSITIONING
        - REFLEXES
        - GOALKEEPER_POSITIONING
        - INTERCEPTIONS
        - CONTROL
        - ORGANIZATION
        - ONE_ON_ONE
        - INTERCEPTING

    CanteraInvestment:
      example: ECONOMY
      type: string
      enum:
        - ECONOMY
        - TRADITION
        - BUILDING

    ImpactType:
      example: MATCH_WIN
      type: string
      enum:
        - MATCH_WIN
        - MATCH_LOSS
        - MATCH_DRAW
        - SEASON_END

    PricingType:
      example: SEASON_TICKET
      type: string
      enum:
        - SEASON_TICKET
        - DAY_TICKET
        - MERCHANDISE
        - RESTAURANT

    Facility:
      example: STADIUM
      type: string
      enum:
        - TRAINING_CENTER
        - YOUTH_PITCH
        - SPORTS_DOCTORS
        - VIDEO_ROOM
        - SCOUTS
        - STADIUM

    LoyaltyImpactType:
      example: MATCH_WIN
      type: string
      enum:
        - MATCH_WIN
        - MATCH_LOSS
        - SEASON_END
        - SEASON_START

    PlayerSkills:
      type: object
      properties:
        actual:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
          example: 5
        potential:
          type: integer
          format: int32
          minimum: 0
          maximum: 1000
          example: 30
        playerSkillRelevance:
          $ref: "#/components/schemas/PlayerSkillRelevance"

    PriceItem:
      type: object
      properties:
        type:
          $ref: "#/components/schemas/PricingType"
        value:
          type: integer
          format: int32

    PlayerAge:
      type: object
      properties:
        years:
          type: number
          format: int32
          minimum: 15
          maximum: 33
          example: 20
        months:
          type: number
          example: 1.05
        days:
          type: number
          example: 3.01

    PlayerPosition:
      type: string
      enum:
        - CENTRE_BACK
        - AERIAL_CENTRE_BACK
        - SWEEPER
        - LEFT_BACK
        - RIGHT_BACK
        - LEFT_WINGBACK
        - RIGHT_WINGBACK
        - DEFENSIVE_MIDFIELDER
        - CENTRE_MIDFIELDER
        - LEFT_MIDFIELDER
        - RIGHT_MIDFIELDER
        - LEFT_WINGER
        - OFFENSIVE_MIDFIELDER
        - RIGHT_WINGER
        - FORWARD
        - AERIAL_FORWARD
        - STRIKER
        - AERIAL_STRIKER
        - GOALKEEPER
      example: FORWARD

    PlayerOrder:
      type: string
      enum:
        - PASS_FORWARD
        - LONG_SHOT
        - CHANGE_FLANK
        - NONE
      example: FORWARD

    PlayerSkillRelevance:
      type: string
      enum:
        - CORE
        - SECONDARY
        - RESIDUAL
      example: CORE

    PlayerTrainingStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      example: ACTIVE

    PlayerCategory:
      type: string
      enum:
        - JUNIOR
        - SENIOR
      example: JUNIOR

    PlayerEconomy:
      type: object
      properties:
        salary:
          type: number
          format: double
          example: 70000

    TransactionType:
      type: string
      enum:
        - SPONSOR
        - PLAYER_SALE
        - PLAYER_PURCHASE
        - ATTENDANCE
        - MERCHANDISE
        - PLAYER_WAGE
        - BUILDING_UPGRADE
        - BUILDING_MAINTENANCE
        - RESTAURANT
        - BILLBOARDS

    SponsorPeriodicity:
      type: string
      enum:
        - WEEKLY
        - ANNUAL
      example: ANNUAL

    SponsorMode:
      type: string
      enum:
        - CONSERVATIVE
        - MODERATE
        - AGGRESSIVE
      example: MODERATE

    BillboardMode:
      type: string
      enum:
        - SHORT
        - MEDIUM
        - LONG
      example: SHORT

    SchedulePlayerTrainingRequest:
      type: object
      properties:
        skills:
          type: array
          example: [ PASSING , SCORING ]
          items:
            $ref: "#/components/schemas/PlayerSkill"

    CreatePlayerRequest:
      type: object
      properties:
        points:
          type: integer
          format: int32
          minimum: 1
          maximum: 700
          example: 5
        age:
          $ref: "#/components/schemas/PlayerAge"
        position:
          $ref: "#/components/schemas/PlayerPosition"
        category:
          $ref: "#/components/schemas/PlayerCategory"

    GeneratePlayersRequest:
      type: object
      properties:
        numberOfPlayers:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 10

    UpdatePlayerPositionTendencyRequest:
      type: object
      example: { "SCORING": { "actual": 5, "potential": 50, "playerSkillRelevance": CORE } }
      additionalProperties:
        type: object
        properties:
          key:
            $ref: "#/components/schemas/PlayerSkill"
          value:
            $ref: "#/components/schemas/PlayerSkills"

    EditTeamRequest:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: "#/components/schemas/EditPlayerRequest"
      required:
        - players

    EditPlayerRequest:
      type: object
      properties:
        id:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        status:
          $ref: "#/components/schemas/PlayerStatus"
        position:
          $ref: "#/components/schemas/PlayerPosition"

    TeamResponse:
      type: object
      properties:
        id:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        name:
          type: string
          example: John Doe's Team
        cantera:
          $ref: "#/components/schemas/Cantera"
        economy:
          $ref: "#/components/schemas/Economy"
        players:
          type: array
          items:
            $ref: "#/components/responses/PlayerResponse"

    Cantera:
      type: object
      properties:
        score:
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 70
        economyLevel:
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 55
        traditionLevel:
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 60
        buildingsLevel:
          type: number
          format: double
          minimum: 0
          maximum: 100
          example: 50

    Economy:
      type: object
      properties:
        balance:
          type: number
          format: double
          example: 50000

    BillboardDeal:
      type: object
      properties:
        startSeason:
          type: integer
        endSeason:
          type: integer
        offer:
          type: number
        type:
          $ref: "#/components/schemas/BillboardMode"

    TransactionSummary:
      type: object
      properties:
        weekSummary:
          type: number
        seasonSummary:
          type: number

    Sponsor:
      type: object
      example: [ { "periodicity": "ANNUAL", "mode": "CONSERVATIVE" }, { "periodicity": "WEEKLY", "mode": "AGGRESSIVE" } ]
      properties:
        periodicity:
          $ref: "#/components/schemas/SponsorPeriodicity"
        mode:
          $ref: "#/components/schemas/SponsorMode"

    Pricing:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PricingType'
        value:
          type: integer

    PlayerWageTransaction:
      type: object
      properties:
        player:
          $ref: '#/components/schemas/PlayerResponse'
        transactionSummary:
          $ref: '#/components/schemas/TransactionSummary'

    Transaction:
      type: object
      properties:
        thisWeekAmount:
          type: number
        lastWeekAmount:
          type: number
        thisSeasonAmount:
          type: number
        context:
          type: string

    EconomyResponse:
      type: object
      properties:
        balance:
          type: number
        billboardDeal:
          $ref: "#/components/schemas/BillboardDeal"
        sponsor:
          type: array
          items:
            $ref: "#/components/schemas/Sponsor"
        prices:
          type: array
          items:
            $ref: '#/components/schemas/PriceItem'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        playerWages:
          type: array
          items:
            $ref: '#/components/schemas/PlayerWageTransaction'

    SimulateSignSponsorRequest:
      type: object
      properties:
        mode:
          $ref: "#/components/schemas/SponsorMode"
        periodicity:
          $ref: '#/components/schemas/SponsorPeriodicity'

    TransactionReportResponse:
      type: object
      properties:
        thisWeekAmount:
          type: number
        lastWeekAmount:
          type: number
        thisSeasonAmount:
          type: number
        transactionType:
          type: string

    PlayerResponse:
      type: object
      properties:
        id:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        age:
          $ref: "#/components/schemas/PlayerAge"
        name:
          type: string
          example: John Doe
        position:
          $ref: "#/components/schemas/PlayerPosition"
        playerOrder:
          $ref: "#/components/schemas/PlayerOrder"
        status:
          $ref: "#/components/schemas/PlayerStatus"
        category:
          $ref: "#/components/schemas/PlayerCategory"
        actualSkills:
          additionalProperties:
            type: object
            properties:
              PlayerSkills:
                $ref: "#/components/schemas/PlayerSkills"
        economy:
          $ref: "#/components/schemas/PlayerEconomy"

    PlayerHistoricalPotentialRiseResponse:
      type: object
      properties:
        playerId:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        potentialRises:
          type: array
          items:
            $ref: "#/components/schemas/PlayerPotentialRiseResponse"

    PlayerHistoricalTrainingResponse:
      type: object
      properties:
        playerId:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        trainings:
          type: array
          items:
            $ref: "#/components/schemas/PlayerTrainingResponse"

    PlayerTrainingResponse:
      type: object
      properties:
        playerId:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        skill:
          $ref: "#/components/schemas/PlayerSkill"
        points:
          type: integer
          format: int32
        actualPoints:
          type: integer
          format: int32
        potentialPoints:
          type: integer
          format: int32
        pointsBeforeTraining:
          type: integer
          format: int32
        pointsAfterTraining:
          type: integer
          format: int32
        currentDay:
          type: integer
          format: int32

    PlayerPotentialRiseResponse:
      type: object
      properties:
        playerId:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        skillThatRisen:
          $ref: "#/components/schemas/PlayerSkill"
        pointsToRise:
          type: integer
          format: int32
        actualPoints:
          type: integer
          format: int32
        potentialBeforeRaise:
          type: integer
          format: int32
        potentialAfterRaise:
          type: integer
          format: int32
        currentDay:
          type: integer
          format: int32

    PlayerDeclineResponse:
      type: object
      properties:
        playerId:
          type: string
          example: 1a2b3c4d-5e6f-7g8h-9i0j-1k2l3m4n5o6p
        skill:
          $ref: "#/components/schemas/PlayerSkill"
        pointsToSubtract:
          type: integer
          format: int32
        pointsBeforeTraining:
          type: integer
          format: int32
        pointsAfterTraining:
          type: integer
          format: int32
        currentDay:
          type: integer
          format: int32

    PlayerPositionTendencyResponse:
      type: object
      properties:
        position:
          $ref: "#/components/schemas/PlayerPosition"
        tendencies:
          type: object
          example: { "SCORING": { "actual": 5, "potential": 50, "playerSkillRelevance": CORE } }
          additionalProperties:
            type: object
            properties:
              PlayerSkill:
                $ref: "#/components/schemas/PlayerSkill"
              PlayerSkills:
                $ref: "#/components/schemas/PlayerSkills"
        default:
          type: boolean

    RegisterSimulatedScheduledTrainingRequest:
      type: object
      properties:
        days:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 2
        skills:
          type: array
          example: [ PASSING , SCORING ]
          items:
            $ref: "#/components/schemas/PlayerSkill"

    RegisterSimulatedScheduledPotentialRiseRequest:
      type: object
      properties:
        daysToSimulate:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 2

    RegisterInvestmentOnCanteraRequest:
      type: object
      properties:
        points:
          type: integer
          format: int32
          minimum: 1
          maximum: 100
          example: 6
        investment:
          $ref: "#/components/schemas/CanteraInvestment"

    RegisterEconomicInvestmentRequest:
      type: object
      properties:
        amount:
          type: number
          format: double
          minimum: 0
          example: 1000000

    SimulateSalaryPayrollRequest:
      type: object
      properties:
        weeks:
          type: integer
          format: int32
          example: 5

    SimulateMatchIncomeRequest:
      type: object
      properties:
        homeAttendance:
          type: integer
          format: int32
          example: 2000
        awayAttendance:
          type: integer
          format: int32
          example: 1000

    SimulateFansUpdateRequest:
      type: object
      properties:
        impactType:
          $ref: "#/components/schemas/ImpactType"
      required:
        - impactType


    SimulatePricingUpdateRequest:
      type: object
      properties:
        prices:
          type: array
          items:
            $ref: "#/components/schemas/Pricing"

    SimulateBuildingUpgradeRequest:
      type: object
      properties:
        facility:
          $ref: "#/components/schemas/Facility"
      required:
        - facility

    SimulateBillboardSelectionRequest:
      type: object
      example: { "mode": "SHORT" }
      properties:
        mode:
          $ref: "#/components/schemas/BillboardMode"

    SimulateLoyaltyUpdateRequest:
      type: object
      example: { "loyaltyImpactType": "MATCH_WIN", "goals": 5 }
      properties:
        loyaltyImpactType:
          $ref: "#/components/schemas/LoyaltyImpactType"
        goals:
          type: integer
          format: int32
          example: 10

    SimulateSponsorResetRequest:
      type: object
      properties:
        periodicity:
          $ref: "#/components/schemas/SponsorPeriodicity"

    RegisterSponsorIncomeRequest:
      type: object
      example: { "weeks": 5, "wins": 5, "sponsors": [ { "periodicity": "ANNUAL", "mode": "CONSERVATIVE" }, { "periodicity": "WEEKLY", "mode": "AGGRESSIVE" } ] }
      properties:
        weeks:
          type: integer
          format: int32
          example: 5
        wins:
          type: integer
          format: int32
          example: 5
        sponsors:
          type: array
          items:
            $ref: "#/components/schemas/Sponsor"

    RegisterBloomPhaseRequest:
      type: object
      properties:
        yearsOn:
          type: integer
          format: int32
          minimum: 1
          maximum: 10
          example: 3
        bloomStartAge:
          type: integer
          format: int32
          minimum: 15
          maximum: 30
          example: 18
        bloomSpeed:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 350

    RegisterSimulatedDeclineRequest:
      type: object
      properties:
        daysToDecline:
          type: integer
          format: int32
          minimum: 15
          maximum: 30
          example: 18
        declineSpeed:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 350

    RegisterRightDeclinePhaseRequest:
      type: object
      properties:
        declineStartAge:
          type: integer
          format: int32
          minimum: 15
          maximum: 30
          example: 18
        declineSpeed:
          type: integer
          format: int32
          minimum: 1
          maximum: 1000
          example: 350

    Error:
      type: "object"
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
